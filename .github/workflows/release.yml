name: Release

on:
  push:
    tags:
      - 'v[0-9]*'

permissions:
  contents: write
  packages: write
  attestations: write
  id-token: write

env:
  GHCR_IMAGE: ghcr.io/${{ github.repository }}

jobs:
  check-version:
    name: Check Version
    runs-on: ubuntu-latest
    outputs:
      prerelease: ${{ steps.version.outputs.prerelease && true || false }}
    steps:
      - name: Check version
        uses: madhead/semver-utils@v4
        id: version
        with:
          version: ${{ github.ref_name }}
          lenient: false

  build-images:
    name: Build Images
    runs-on: ubuntu-latest
    needs: check-version
    permissions:
      actions: write
      attestations: write
      checks: write
      contents: write
      deployments: write
      discussions: write
      id-token: write
      issues: write
      models: read
      packages: write
      pages: write
      pull-requests: write
      security-events: write
      statuses: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        if: env.GHCR_IMAGE
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GHCR_IMAGE }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=canary,enable=${{ needs.check-version.outputs.prerelease }}

      - name: Build and push
        uses: docker/build-push-action@v6
        id: build-and-push
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
